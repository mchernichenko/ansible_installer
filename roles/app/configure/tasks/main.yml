---
# Создание временной локальной директории, куда будут скачиваться шаблоны
- name: Generate temp directory name
  set_fact:
    tmp_path: "{{ ansible_temp_dir | default('/tmp') }}/ansible-{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}_{{ 999999|random }}"

- name: Create temp directory
  delegate_to: localhost
  become: no
  file:
    path: "{{ tmp_path }}"
    state: directory

# Запуск команд на целевой машине перед установкой.
# Чаще всего используется для "костылей" и лучше решать проблемы другим методом.
- name: Run custom pre-configure scripts
  shell: "{{ item }}"
  with_items: "{{ pre_configure_scripts|default([]) }}"

- block:
  - name: Search artifact
    artifactory:
      path: "{{ artifactory.path }}*conf/{{ classifier }}/local*"
    register: search

  - debug:
      var: search
      verbosity: 1

  - block:
    - name: Download configs to local
      delegate_to: localhost
      become: no
      unarchive:
        src: "{{ artifactory.url }}/{{ search.artifact.full_path }}"
        dest: "{{ tmp_path }}"
        remote_src: yes

    # Создание директорий и рекурсивное раскладывание шаблонов на сервер
    - name: Create folders for configs
      file:
        dest: "{{ app.app_dir }}{{ item|replace(tmp_path, '') }}"
        state: directory
      with_items: "{{ lookup('pipe', 'find ' + tmp_path|default('/tmp') + ' -mindepth ' + config_search_min_depth|default('2') + ' -type d').split('\n') }}"

    - name: Copy all templates recursively
      template:
        src: "{{ item }}"
        dest: "{{ app.app_dir }}{{ item|replace(tmp_path, '') }}"
      with_items: "{{ lookup('pipe', 'find ' + tmp_path|default('/tmp') + '/ -mindepth ' + config_search_min_depth|default('2') + ' -type f').split('\n') }}"
    when: search.artifact.found
    rescue:
      - debug: msg='Configuration for artifact with path "{{ artifactory.path }}/conf/{{ classifier }}/local failed"'
  when: configure_from_artifactory|default(True)

- name: Remove temp directory
  delegate_to: localhost
  become: no
  file:
    path: "{{ tmp_path }}"
    state: absent

- name: Create temp directory
  delegate_to: localhost
  become: no
  file:
    path: "{{ tmp_path }}"
    state: directory
    
- block:
  - name: Fix permissions for ssh-key (600)
    file:
        path: "{{ git_key }}"
        mode: "0600"
    when: "{{ git_key }}"
    delegate_to: localhost
    become: false
    run_once: true

  - name: Download configs from git
    git: 
        repo:           "ssh://{{ git_user }}@{{ git_cfg_repo }}"
        dest:           "{{ tmp_path }}"
        depth:          "{{ git_cfg_depth|default(1) }}"
        force:          "True"
        version:        "{{ git_cfg_pull_version|default('HEAD') }}"
        key_file:       "{{ git_key }}"
        accept_hostkey: "True"
        executable:     "{{ git_executable|default('') }}"
    delegate_to: localhost
    become: false

  - name: Remove .git folder
    file:
      path: "{{ tmp_path }}/.git"
      state: absent

  # Создание директорий и рекурсивное раскладывание шаблонов на сервер
  - name: Create folders for configs
    file:
      dest: "{{ app.app_dir }}{{ item|replace(tmp_path, '') }}"
      state: directory
    with_items: "{{ lookup('pipe', 'find ' + tmp_path|default('/tmp') + ' -mindepth ' + config_search_min_depth|default('2') + ' -type d').split('\n') }}"

  - name: Copy all templates recursively
    template:
      src: "{{ item }}"
      dest: "{{ app.app_dir }}{{ item|replace(tmp_path, '') }}"
    with_items: "{{ lookup('pipe', 'find ' + tmp_path|default('/tmp') + '/ -mindepth ' + config_search_min_depth|default('2') + ' -type f').split('\n') }}"
  when: configure_from_git|default(false)
  rescue:
    - debug: msg='Configuration from git failed"'

# Запуск команд на целевой машине после установки.
# Чаще всего используется для "костылей" и лучше решать проблемы другим методом.
- name: Run custom post-configure scripts
  shell: "{{ item }}"
  with_items: "{{ post_configure_scripts|default([]) }}"

- name: Remove temp directory
  delegate_to: localhost
  become: no
  file:
    path: "{{ tmp_path }}"
    state: absent
